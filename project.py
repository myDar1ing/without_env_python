import os, json, requests
from dotenv import load_dotenv
load_dotenv()
#meme
BASE_URL = os.getenv("OPENAI_BASE_URL", "https://api.openai.com/v1")
MODEL= os.getenv("OPENAI_MODEL", "gpt-4o-mini")
API_KEY= os.getenv("OPENAI_API_KEY")
if not API_KEY:
    raise RuntimeError("OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏")

CHAT_URL = f"{BASE_URL}/chat/completions"

SYSTEM_PROMPT = (
    "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä –ø–æ –±–∏–æ–ª–æ–≥–∏–∏ –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤. "
    "–û–±—ä—è—Å–Ω—è–π –ø—Ä–æ—Å—Ç–æ –∏ –∫–æ—Ä–æ—Ç–∫–æ. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–µ–Ω ‚Äî —É—Ç–æ—á–Ω–∏ 1 –≤–µ—â—å. "
    "–û—Ç–≤–µ—á–∞–µ—à—å –≤–æ–ø—Ä–æ—Å–∞–º —Ç–æ–ª—å–∫–æ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –∫–∞—Å–∞–µ—Ç—Å—è —ç—Ç–æ–≥–æ, –ø–æ–ø—Ä–æ—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á—Ç–æ–± –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å –ø–æ –±–∏–æ–ª–æ–≥–∏–∏"
    "–î–∞–π —Ä–µ—à–µ–Ω–∏–µ/–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≤ 2‚Äì4 —à–∞–≥–∞—Ö –∏ –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç. "
    "–î–æ–±–∞–≤–ª—è–π 1 –º–∏–Ω–∏-—Å–æ–≤–µ—Ç –ø–æ —Ç–µ–º–µ –≤ –∫–æ–Ω—Ü–µ (1 —Å—Ç—Ä–æ–∫–∞)."
)

def ask_llm(question: str) -> str:
    payload = {
        "model": MODEL,
        "messages": [
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user",   "content": question},
        ],
        "temperature": 0.2,
    }
    try:
        resp = requests.post(
            CHAT_URL,
            headers={
                "Authorization": f"Bearer {API_KEY}",
                "Content-Type": "application/json"
            },
            data=json.dumps(payload),
            timeout=60
        )
        # resp.raise_for_status()
        obj = json.loads(resp.text)
        print(obj)
        return obj["choices"][0]["message"]["content"].strip()
    except requests.exceptions.RequestException as e:
        return f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}"

def main():
    print("üß¨ –ë–∏–æ–±–æ—Ç –∑–∞–ø—É—â–µ–Ω. –°–ø—Ä–æ—Å–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏ (–∏–ª–∏ /exit):")
    while True:
        try:
            q = input("\n–¢—ã: ").strip()
        except (EOFError, KeyboardInterrupt):
            print("\n–ü–æ–∫–∞! üëã"); break
        if not q: 
            continue
        if q.lower() in ("/exit", "exit", "quit"):
            print("–ü–æ–∫–∞! üëã"); break
        print(f"–ë–æ—Ç: {ask_llm(q)}")

if __name__ == "__main__":
    main()